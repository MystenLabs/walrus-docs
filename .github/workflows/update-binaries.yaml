name: Update bin.walrus.site with latest binaries

on:
  repository_dispatch:
    types: [update-sites-bins]
  # every week
  schedule:
    - cron: "14 3 * * 0"
  # on demand
  workflow_dispatch:

concurrency: ci-${{ github.ref }}


env:
  WALRUS_SITES_DIR: walrus-sites
  CARGO_TERM_COLOR: always
  # Disable incremental compilation.
  #
  # Incremental compilation is useful as part of an edit-build-test-edit cycle,
  # as it lets the compiler avoid recompiling code that hasn't changed. However,
  # on CI, we're not making small edits; we're almost always building the entire
  # project from scratch. Thus, incremental compilation on CI actually
  # introduces *additional* overhead to support making future builds
  # faster...but no future builds will ever occur in any given CI environment.
  #
  # See https://matklad.github.io/2021/09/04/fast-rust-builds.html#ci-workflow
  # for details.
  CARGO_INCREMENTAL: 0
  # Allow more retries for network requests in cargo (downloading crates) and
  # rustup (installing toolchains). This should help to reduce flaky CI failures
  # from transient network timeouts or other issues.
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10
  # Don't emit giant backtraces in the CI logs.
  RUST_BACKTRACE: short

jobs:
  # We store the data for the Sui wallet and the site object in GitHub variables
  # (https://github.com/MystenLabs/walrus-docs/settings/variables/actions) and secrets
  # (https://github.com/MystenLabs/walrus-docs/settings/secrets/actions).
  update-bin-walrus-site:
    name: Update Walrus Site bin.walrus.site
    runs-on: ubuntu-ghcloud
    env:
      # Colors don't seem to work properly with the multiline commands.
      NO_COLOR: 1
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/set-up-walrus
        with:
          SUI_ADDRESS: "${{ vars.SUI_ADDRESS }}"
          SUI_KEYSTORE: "${{ secrets.SUI_KEYSTORE }}"
          WALRUS_CONFIG: "${{ vars.WALRUS_CONFIG }}"

      - name: Create temporary directory
        run: "mkdir -p site"
      - name: Download latest testnet binaries
        run: |
          for arch in ubuntu-x86_64 ubuntu-x86_64-generic macos-x86_64 macos-arm64 windows-x86_64.exe; do
          name=walrus-testnet-latest-$arch
          curl https://storage.googleapis.com/mysten-walrus-binaries/$name -o site/$name
          done

      - name: key.store contents
        shell: bash
        run: cat /home/runner/.sui/sui_config/sui.keystore

      - name: Update Walrus Site
        run: >
          RUST_LOG=site_builder=debug,walrus=debug,info
          site-builder
          --config walrus-sites/sites-config.yaml
          update --list-directory site ${{ vars.WALRUS_SITE_BIN_OBJECT }}
          --epochs 200
          --force
